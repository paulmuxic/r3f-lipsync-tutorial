/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 ./public/models/scene2.glb -o ./src/components/AvatarLokAnim.jsx -r public 
*/

import React, {useMemo, useEffect} from 'react'
import { useFrame, useGraph, useLoader } from '@react-three/fiber'
import { useControls } from "leva";
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

import * as THREE from "three";


const corresponding = {
  0: "B_M_P",
  1: "AE",
  2: "Ah",
  3: "W_OO",
  4: "EE",
  5: "Er",
  6: "Ih",
  7: "W_OO",
  8: "Oh",
  9: "Ah",
  10: "W_OO",
  11: "Ah",
  12: "K_G_H_NG",
  13: "Oh",
  14: "T_L_D_N",
  15: "S_Z",
  16: "Ch_J",
  17: "Th",
  18: "F_V",
  19: "T_L_D_N",
  20: "K_G_H_NG",
  21: "B_M_P"
};

export function Model(props) {
  const {playAudio, script, smoothMorphTarget, morphTargetSmoothing} = useControls({
    playAudio: false,
    smoothMorphTarget: true,
    morphTargetSmoothing: 0.5,
    script: {
      value: "hello",
      options: ["hello"],
    },
  });
  const audio = useMemo(() => new Audio(`/audios/${script}.wav`), [script]);
  const jsonFile = useLoader(THREE.FileLoader, `audios/${script}.json`);
  const lipsync = JSON.parse(jsonFile)

  useFrame(() => {
    const currentAudioTime = audio.currentTime;

    Object.values(corresponding).forEach((value) => {
      if (!smoothMorphTarget) {
        nodes.CC_Base_Body_1.morphTargetInfluences[
          nodes.CC_Base_Body_1.morphTargetDictionary[value]
        ] = 0;
      } else {
        nodes.CC_Base_Body_1.morphTargetInfluences[
          nodes.CC_Base_Body_1.morphTargetDictionary[value]
        ] = THREE.MathUtils.lerp(
          nodes.CC_Base_Body_1.morphTargetInfluences[
            nodes.CC_Base_Body_1.morphTargetDictionary[value]
          ],
          0,
          morphTargetSmoothing
        );
      }

      
    });

    for (let i = 0; i < lipsync.mouthCues.length-1; i++) {
      const mouthCue = lipsync.mouthCues[i];
      const nextMouthCue = lipsync.mouthCues[i+1]
      if (currentAudioTime >= mouthCue.start && currentAudioTime <= nextMouthCue.start) {
        console.log(mouthCue.value);
        if (!smoothMorphTarget) {
          nodes.CC_Base_Body_1.morphTargetInfluences[
            nodes.CC_Base_Body_1.morphTargetDictionary[corresponding[mouthCue.value]]
          ] = 1;
        } else {
          nodes.CC_Base_Body_1.morphTargetInfluences[
            nodes.CC_Base_Body_1.morphTargetDictionary[corresponding[mouthCue.value]]
          ] = THREE.MathUtils.lerp(
            nodes.CC_Base_Body_1.morphTargetInfluences[
              nodes.CC_Base_Body_1.morphTargetDictionary[corresponding[mouthCue.value]]
            ],
            1,
            morphTargetSmoothing
          );
        }
        break;
      }
    }
  })

  useEffect(() => {
    if (playAudio) {
      audio.play();
    } else {
      audio.pause();
    }
  }, [playAudio, script]);
  
  const group = React.useRef()
  const { scene } = useGLTF('/models/scene2.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials, animations } = useGraph(clone)
  // console.log(nodes.CC_Base_Body_1.morphTargetDictionary)
  // const { actions } = useAnimations(animations, group)



  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Lok_Human_Walkglb">
          <group name="Lok_Human_Ani_Walk" scale={0.01}>
            <primitive object={nodes.CC_Base_BoneRoot} />
            <group name="CC_Base_Body">
              <skinnedMesh name="CC_Base_Body_1" geometry={nodes.CC_Base_Body_1.geometry} material={materials.Std_Skin_Head} skeleton={nodes.CC_Base_Body_1.skeleton} morphTargetDictionary={nodes.CC_Base_Body_1.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_Body_1.morphTargetInfluences} />
              <skinnedMesh name="CC_Base_Body_2" geometry={nodes.CC_Base_Body_2.geometry} material={materials.Std_Skin_Body} skeleton={nodes.CC_Base_Body_2.skeleton} morphTargetDictionary={nodes.CC_Base_Body_2.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_Body_2.morphTargetInfluences} />
              <skinnedMesh name="CC_Base_Body_3" geometry={nodes.CC_Base_Body_3.geometry} material={materials.Std_Skin_Arm} skeleton={nodes.CC_Base_Body_3.skeleton} morphTargetDictionary={nodes.CC_Base_Body_3.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_Body_3.morphTargetInfluences} />
              <skinnedMesh name="CC_Base_Body_4" geometry={nodes.CC_Base_Body_4.geometry} material={materials.Std_Skin_Leg} skeleton={nodes.CC_Base_Body_4.skeleton} morphTargetDictionary={nodes.CC_Base_Body_4.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_Body_4.morphTargetInfluences} />
              <skinnedMesh name="CC_Base_Body_5" geometry={nodes.CC_Base_Body_5.geometry} material={materials.Std_Nails} skeleton={nodes.CC_Base_Body_5.skeleton} morphTargetDictionary={nodes.CC_Base_Body_5.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_Body_5.morphTargetInfluences} />
              <skinnedMesh name="CC_Base_Body_6" geometry={nodes.CC_Base_Body_6.geometry} material={materials.Std_Eyelash} skeleton={nodes.CC_Base_Body_6.skeleton} morphTargetDictionary={nodes.CC_Base_Body_6.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_Body_6.morphTargetInfluences} />
            </group>
            <group name="CC_Base_Eye">
              <skinnedMesh name="CC_Base_Eye_1" geometry={nodes.CC_Base_Eye_1.geometry} material={materials.Std_Eye_R} skeleton={nodes.CC_Base_Eye_1.skeleton} morphTargetDictionary={nodes.CC_Base_Eye_1.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_Eye_1.morphTargetInfluences} />
              <skinnedMesh name="CC_Base_Eye_2" geometry={nodes.CC_Base_Eye_2.geometry} material={materials.Std_Cornea_R} skeleton={nodes.CC_Base_Eye_2.skeleton} morphTargetDictionary={nodes.CC_Base_Eye_2.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_Eye_2.morphTargetInfluences} />
              <skinnedMesh name="CC_Base_Eye_3" geometry={nodes.CC_Base_Eye_3.geometry} material={materials.Std_Eye_L} skeleton={nodes.CC_Base_Eye_3.skeleton} morphTargetDictionary={nodes.CC_Base_Eye_3.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_Eye_3.morphTargetInfluences} />
              <skinnedMesh name="CC_Base_Eye_4" geometry={nodes.CC_Base_Eye_4.geometry} material={materials.Std_Cornea_L} skeleton={nodes.CC_Base_Eye_4.skeleton} morphTargetDictionary={nodes.CC_Base_Eye_4.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_Eye_4.morphTargetInfluences} />
            </group>
            <group name="CC_Base_EyeOcclusion">
              <skinnedMesh name="CC_Base_EyeOcclusion_1" geometry={nodes.CC_Base_EyeOcclusion_1.geometry} material={materials.Std_Eye_Occlusion_R} skeleton={nodes.CC_Base_EyeOcclusion_1.skeleton} morphTargetDictionary={nodes.CC_Base_EyeOcclusion_1.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_EyeOcclusion_1.morphTargetInfluences} />
              <skinnedMesh name="CC_Base_EyeOcclusion_2" geometry={nodes.CC_Base_EyeOcclusion_2.geometry} material={materials.Std_Eye_Occlusion_L} skeleton={nodes.CC_Base_EyeOcclusion_2.skeleton} morphTargetDictionary={nodes.CC_Base_EyeOcclusion_2.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_EyeOcclusion_2.morphTargetInfluences} />
            </group>
            <group name="CC_Base_TearLine">
              <skinnedMesh name="CC_Base_TearLine_1" geometry={nodes.CC_Base_TearLine_1.geometry} material={materials.Std_Tearline_R} skeleton={nodes.CC_Base_TearLine_1.skeleton} morphTargetDictionary={nodes.CC_Base_TearLine_1.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_TearLine_1.morphTargetInfluences} />
              <skinnedMesh name="CC_Base_TearLine_2" geometry={nodes.CC_Base_TearLine_2.geometry} material={materials.Std_Tearline_L} skeleton={nodes.CC_Base_TearLine_2.skeleton} morphTargetDictionary={nodes.CC_Base_TearLine_2.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_TearLine_2.morphTargetInfluences} />
            </group>
            <group name="CC_Base_Teeth">
              <skinnedMesh name="CC_Base_Teeth_1" geometry={nodes.CC_Base_Teeth_1.geometry} material={materials.Std_Upper_Teeth} skeleton={nodes.CC_Base_Teeth_1.skeleton} />
              <skinnedMesh name="CC_Base_Teeth_2" geometry={nodes.CC_Base_Teeth_2.geometry} material={materials.Std_Lower_Teeth} skeleton={nodes.CC_Base_Teeth_2.skeleton} />
            </group>
            <group name="Classic_short">
              <skinnedMesh name="Classic_short_1" geometry={nodes.Classic_short_1.geometry} material={materials.Hair_Transparency} skeleton={nodes.Classic_short_1.skeleton} morphTargetDictionary={nodes.Classic_short_1.morphTargetDictionary} morphTargetInfluences={nodes.Classic_short_1.morphTargetInfluences} />
              <skinnedMesh name="Classic_short_2" geometry={nodes.Classic_short_2.geometry} material={materials.Scalp_Transparency} skeleton={nodes.Classic_short_2.skeleton} morphTargetDictionary={nodes.Classic_short_2.morphTargetDictionary} morphTargetInfluences={nodes.Classic_short_2.morphTargetInfluences} />
            </group>
            <group name="Polo_Shirt_001">
              <skinnedMesh name="Polo_Shirt_001_1" geometry={nodes.Polo_Shirt_001_1.geometry} material={materials.Polo_Shirt} skeleton={nodes.Polo_Shirt_001_1.skeleton} />
              <skinnedMesh name="Polo_Shirt_001_2" geometry={nodes.Polo_Shirt_001_2.geometry} material={materials.Button} skeleton={nodes.Polo_Shirt_001_2.skeleton} />
            </group>
            <skinnedMesh name="Lok_Glasses" geometry={nodes.Lok_Glasses.geometry} material={materials.model_object_2} skeleton={nodes.Lok_Glasses.skeleton} />
            <skinnedMesh name="Slim_Jeans" geometry={nodes.Slim_Jeans.geometry} material={materials.Slim_Jeans} skeleton={nodes.Slim_Jeans.skeleton} />
            <skinnedMesh name="Sport_sneakers" geometry={nodes.Sport_sneakers.geometry} material={materials.Sport_sneakers} skeleton={nodes.Sport_sneakers.skeleton} />
            <skinnedMesh name="CC_Base_Tongue" geometry={nodes.CC_Base_Tongue.geometry} material={materials.Std_Tongue} skeleton={nodes.CC_Base_Tongue.skeleton} morphTargetDictionary={nodes.CC_Base_Tongue.morphTargetDictionary} morphTargetInfluences={nodes.CC_Base_Tongue.morphTargetInfluences} />
          </group>
          <group name="Lighting" />
        </group>
        {/* <spotLight name="SpotLight" intensity={100} angle={Math.PI / 10} decay={2} position={[5, 2.045, 7.5]}>
          <group position={[0, 0, -1]} />
        </spotLight>
        <spotLight name="SpotLight_2" intensity={50} angle={Math.PI / 10} decay={2} position={[-7.042, 2.298, 6.384]}>
          <group position={[0, 0, -1]} />
        </spotLight>
        <spotLight name="SpotLight_4" intensity={50} angle={Math.PI / 10} decay={2} position={[0.998, -0.504, -6.809]}>
          <group position={[0, 0, -1]} />
        </spotLight> */}
      </group>
    </group>
  )
}

useGLTF.preload('/models/scene2.glb')
